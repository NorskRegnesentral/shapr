# Generated by roxygen2: do not edit by hand

S3method(explain,combined)
S3method(explain,copula)
S3method(explain,ctree)
S3method(explain,ctree_comb_mincrit)
S3method(explain,empirical)
S3method(explain,gaussian)
S3method(get_model_specs,gam)
S3method(get_model_specs,glm)
S3method(get_model_specs,lm)
S3method(get_model_specs,ranger)
S3method(get_model_specs,xgb.Booster)
S3method(model_checker,default)
S3method(model_checker,gam)
S3method(model_checker,glm)
S3method(model_checker,lm)
S3method(model_checker,ranger)
S3method(model_checker,xgb.Booster)
S3method(plot,shapr)
S3method(predict_model,default)
S3method(predict_model,gam)
S3method(predict_model,glm)
S3method(predict_model,lm)
S3method(predict_model,ranger)
S3method(predict_model,xgb.Booster)
S3method(prepare_data,copula)
S3method(prepare_data,ctree)
S3method(prepare_data,empirical)
S3method(prepare_data,gaussian)
export(aicc_full_single_cpp)
export(check_features)
export(correction_matrix_cpp)
export(create_ctree)
export(explain)
export(feature_combinations)
export(feature_matrix_cpp)
export(get_data_specs)
export(get_model_specs)
export(hat_matrix_cpp)
export(mahalanobis_distance_cpp)
export(make_dummies)
export(model_checker)
export(observation_impute_cpp)
export(predict_model)
export(prepare_data)
export(preprocess_data)
export(rss_cpp)
export(shapr)
export(update_data)
export(weight_matrix_cpp)
importFrom(Rcpp,sourceCpp)
importFrom(data.table,":=")
importFrom(data.table,as.data.table)
importFrom(data.table,between)
importFrom(data.table,copy)
importFrom(data.table,data.table)
importFrom(data.table,fread)
importFrom(data.table,fwrite)
importFrom(data.table,is.data.table)
importFrom(data.table,month)
importFrom(data.table,rbindlist)
importFrom(data.table,setcolorder)
importFrom(data.table,setkey)
importFrom(data.table,setnames)
importFrom(data.table,uniqueN)
importFrom(data.table,year)
importFrom(graphics,hist)
importFrom(graphics,plot)
importFrom(graphics,rect)
importFrom(stats,as.formula)
importFrom(stats,contrasts)
importFrom(stats,model.frame)
importFrom(stats,model.matrix)
importFrom(stats,predict)
importFrom(stats,setNames)
importFrom(utils,head)
importFrom(utils,methods)
importFrom(utils,tail)
useDynLib(shapr, .registration = TRUE)
