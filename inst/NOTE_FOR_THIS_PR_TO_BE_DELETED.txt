NOTE: In this PR I will do

1. within shapr and explain, check that the factors have the same levels as provided in the model objects
  a.  check if input is data.frame/data.table or matrix. If matrix, do nothing
      if data.frame, convert to data.table, then
      check which factors are specified in the model object (dummylist for xgboost, something else in lm and glm),
      and then check if that matches the data. This COULD be done within the features-functions,
      separately extracing AND checking within the individual functions.
      A better approach is perhaps to make a check_features function, which does the checking and will call the features
      function which are simplified to only return lists with the different features, their class and if factors,
      also their levels. Other packages must have the same "problem". Maybe I can see how this is
      done in e.g. lime.


        -- this could be specified

require that data passed to the function is a data.table object

get_model_features(x){

named list with feature_names as names
every component has two objects:
1. feature_type
2. levels (NULL if not a factor)

feature_names = ...
feature_types

}

save this as feature_list_model and call it only in shapr

get_data_features(x){
same list as above
}

check_features(model_feature_labels,data){
do all the same checks that are done in the make/apply_dummies-functions.

}

in shapr: call this after doing as.data.table(x) where we do features today
in explain call this in the main function (before setting the class), after a call to as.data.table.

Handling custom models: currently feature_labels are passed. We could still allow that, but then throw a warning
  that the class has not been checked for custom models -- then coerce to


TODO:

#1. document input to update_data, check_features and similar
#2. Add messages when things are not checked (already done?)
#3. Make tests for errors
3.5: Make tests for update_data + check whether I should add something to the shapr and explain tests to trigger errors in the check functionality.
3.6. Add examples
#4. Add proper checking for the explain function
4.5. Check whether the modifications to the explainer object doen in the main explain function are carried forward to
    the differnet class versions or not.
#6. Check if it makes sense to make ONE big function calling the two get functions, check features and the updater.
NO, I WILL KEEP IT THIS WAY AS I NEED THE feature list to be added to the explainer.
7. Delete traces of features
8. Update test objects for explainer (shapr) as they will now contain the feature list from the explainer
9. Run all tests
10. Run checks -- I am sure there are issues here!
11. Make PR
12. Talk to Annabelle on whether I should update the dummy functions here. Update dummy? OR postpone this until you talk to Annabelle?

