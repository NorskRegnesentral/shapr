% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/approach_regression_separate.R
\name{regression.check_recipe_func}
\alias{regression.check_recipe_func}
\title{Check \code{regression.recipe_func}}
\usage{
regression.check_recipe_func(regression.recipe_func, x_explain)
}
\arguments{
\item{regression.recipe_func}{Either \code{NULL} (default) or a function that that takes in a \code{\link[recipes:recipe]{recipes::recipe()}}
object and returns a modified \code{\link[recipes:recipe]{recipes::recipe()}} with potentially additional recipe steps. See the regression
vignette for several examples.
Note, to make it easier to call \code{explain()} from Python, the \code{regression.recipe_func} can also be a string
containing an R function. For example,
\code{"function(recipe) return(recipes::step_ns(recipe, recipes::all_numeric_predictors(), deg_free = 2))"} is also
a valid input. It is essential to include the package prefix if the package is not loaded.}

\item{x_explain}{A matrix or data.frame/data.table.
Contains the the features, whose predictions ought to be explained.}
}
\description{
Check that regression.recipe_func is a function that returns the
RHS of the formula for arbitrary feature name inputs.
}
\author{
Lars Henry Berge Olsen
}
\keyword{internal}
