% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{make_MSEv_evaluation_criterion_plots}
\alias{make_MSEv_evaluation_criterion_plots}
\title{Plots of the MSEv Evaluation Criterion}
\usage{
make_MSEv_evaluation_criterion_plots(
  explanation_list,
  index_explicands = NULL,
  index_combinations = NULL,
  only_overall_MSEv = FALSE,
  plot_overall_MSEv = FALSE,
  return_figures = TRUE,
  ggplot_theme = NULL,
  brewer_palette = "Paired",
  brewer_direction = 1,
  title_text_size = 12,
  bar_text_color = "black",
  bar_text_size = 0,
  bar_text_n_decimals = 0,
  line_type = "solid",
  line_width = 0.4,
  point_size = 3,
  point_shape = "circle",
  add_error_bars = FALSE,
  rotate_feature_names_45_degrees = NULL,
  flip_coordinates = FALSE,
  legend_position = NULL,
  legend_ncol = NULL,
  legend_nrow = NULL
)
}
\arguments{
\item{explanation_list}{A list of \code{\link[=explain]{explain()}} objects applied to the same data and model.
If the entries in the list is named, then the function use these names. Otherwise, it defaults to
the approach names (with integer suffix for duplicates) for the explanation objects in \code{explanation_list}.}

\item{index_explicands}{Integer vector. Which of the explicands (test observations) to plot.
E.g. if you have explained 10 observations using \code{\link[=explain]{explain()}}, you can generate a plot for the
first 5 observations/explicands and the 10th by setting \code{index_x_explain = c(1:5, 10)}.}

\item{index_combinations}{Integer vector. Which of the coalitions (combinations) to plot.
E.g. if you used \code{n_combinations = 16} in \code{\link[=explain]{explain()}}, you can generate a plot for the
first 5 coalitions and the 10th by setting \code{index_x_explain = c(1:5, 10)}.}

\item{only_overall_MSEv}{Boolean. If \code{TRUE}, then creates only the overall_MSEv plot and skip
the figures where we illustrate the MSEv evaluation criterion for each explicand and coalition
by only averaging over the coalitions and explicands, respectively.}

\item{plot_overall_MSEv}{Boolean. If \code{TRUE}, then plot the overall_MSEv figure before returning all figures.
#' @param return_figures Boolean. If \code{TRUE}, then the function returns the figures in a list.}

\item{ggplot_theme}{A \code{\link[ggplot2:theme]{ggplot2::theme()}} object to customize the non-data components of the plots:
i.e. titles, labels, fonts, background, gridlines, and legends. Themes can be used to give plots
a consistent customized look. Use the themes available in \code{\link[ggplot2:theme_bw]{ggplot2::ggtheme()}}.
if you would like to use a complete theme such as \code{theme_bw()}, \code{theme_minimal()}, and more.}

\item{brewer_palette}{String. Name of one of the color palettes from \code{\link[RColorBrewer:ColorBrewer]{RColorBrewer::RColorBrewer()}}.
If \code{NULL}, then the function uses the default \code{\link[ggplot2:ggplot]{ggplot2::ggplot()}} color scheme.
The following palettes are available for use with these scales:
\describe{
\item{Diverging}{BrBG, PiYG, PRGn, PuOr, RdBu, RdGy, RdYlBu, RdYlGn, Spectral}
\item{Qualitative}{Accent, Dark2, Paired, Pastel1, Pastel2, Set1, Set2, Set3}
\item{Sequential}{Blues, BuGn, BuPu, GnBu, Greens, Greys, Oranges,
OrRd, PuBu, PuBuGn, PuRd, Purples, RdPu, Reds, YlGn, YlGnBu, YlOrBr, YlOrRd}
}}

\item{brewer_direction}{Sets the order of colors in the scale. If 1, the default,
colors are as output by \code{\link[RColorBrewer:ColorBrewer]{RColorBrewer::brewer.pal()}}.
If -1, the order of colors is reversed.}

\item{title_text_size}{Positive numeric. The size of the title. If \code{0}, then the text is removed.}

\item{bar_text_color}{String. Color of the text in the bars. The text shows the exact height of the bars.}

\item{bar_text_size}{Positive numeric. The size of the text in the bars. If \code{0}, then the text is removed.}

\item{bar_text_n_decimals}{Integer. The number of decimals to include in the text inside the bars.}

\item{line_type}{Legal values are the strings "blank", "solid", "dashed", "dotted", "dotdash", "longdash", and "twodash".
Alternatively, the numbers 0 to 6 can be used (0 for "blank", 1 for "solid", ...).
Moreover, one can also use strings that define the line type with up to 8 hexadecimal digits
(each digit specifying the length of interleaved lines and gaps), see \url{https://ggplot2.tidyverse.org/articles/ggplot2-specs.html}
and/or \url{http://sape.inf.usi.ch/quick-reference/ggplot2/linetype}.}

\item{line_width}{Positive numeric. Width of the lines, and 0 is the same as \code{line_type} = \code{blank}.}

\item{point_size}{Positive numeric. The size of the points. Set \code{point_size = 0} to remove points.}

\item{point_shape}{Integer or string. Specify the shape of the points.
For a complete list of all possible shapes, see \url{https://ggplot2.tidyverse.org/articles/ggplot2-specs.html}.}

\item{add_error_bars}{Boolean. If \code{TRUE}, the function adds error bars (Â± 1sd) to the MSEv
for the coalitions averaged over the explicands. It does not makes sense to add it for the other
plots as the scale of the MSEv for the explicands averaged over the coalitions is different for each
coalition. The mileage of this argument may vary due to potentially overlapping error bars.}

\item{rotate_feature_names_45_degrees}{Boolean. If the names are to be rotated 45 degrees to make them easier to read.
Does this automatically for long names if \code{rotate_feature_names_45_degrees} is not set to \code{FALSE}.}

\item{flip_coordinates}{Boolean. Flip Cartesian coordinates so that horizontal becomes vertical, and vertical, horizontal.
This is primarily useful for converting geoms and statistics which display y conditional on x, to x conditional on y.
See \code{\link[ggplot2:coord_flip]{ggplot2::coord_flip()}}.}

\item{legend_position}{String or numeric vector \code{c(x,y)}. The allowed string values for the
argument \code{legend_position} are: \code{left},\code{top}, \code{right}, \code{bottom}. Note that, the argument
\code{legend_position} can be also a numeric vector \code{c(x,y)}. In this case it is possible to position
the legend inside the plotting area. \code{x} and \code{y} are the coordinates of the legend box.
Their values should be between \code{0} and \code{1}, where \code{c(0,0)} corresponds to the "bottom left"
and \code{c(1,1)} corresponds to the "top right" position.}

\item{legend_ncol}{Integer. The number of columns in the legend.}

\item{legend_nrow}{Integer. The number of rows in the legend.}
}
\value{
List of 5 \code{\link[ggplot2:ggplot]{ggplot2::ggplot()}} objects: three bar plots and two line plots.
}
\description{
Make plots to visualize and compare the MSEv evaluation criterion for a list of
\code{\link[=explain]{explain()}} objects applied to the same data and model. The function creates
bar plots and line plots, potentially with points, to illustrate the overall MSEv evaluation
criterion, but also for each explicand and coalition by only averaging over the coalitions
and explicands, respectively.
}
\examples{
# Load necessary libraries
library(xgboost)
library(data.table)

# Get the data
data("airquality")
data = data.table::as.data.table(airquality)
data = data[complete.cases(data), ]

# Define the features and the response
x_var = c("Solar.R", "Wind", "Temp", "Month")
y_var = "Ozone"

# Split data into test and training data set
ind_x_explain = 1:25
x_train = data[-ind_x_explain, ..x_var]
y_train = data[-ind_x_explain, get(y_var)]
x_explain = data[ind_x_explain, ..x_var]

# Fitting a basic xgboost model to the training data
model = xgboost::xgboost(
  data = as.matrix(x_train),
  label = y_train,
  nround = 20,
  verbose = FALSE
)

# Specifying the phi_0, i.e. the expected prediction without any features
prediction_zero = mean(y_train)

# Independence approach
explanation_independence = explain(
  model = model,
  x_explain = x_explain,
  x_train = x_train,
  approach = "independence",
  prediction_zero = prediction_zero,
  n_samples = 1e2
)

# Empirical approach
explanation_empirical = explain(
  model = model,
  x_explain = x_explain,
  x_train = x_train,
  approach = "empirical",
  prediction_zero = prediction_zero,
  n_samples = 1e2
)

# Gaussian 1e1 approach
explanation_gaussian_1e1 = explain(
  model = model,
  x_explain = x_explain,
  x_train = x_train,
  approach = "gaussian",
  prediction_zero = prediction_zero,
  n_samples = 1e1
)

# Gaussian 1e2 approach
explanation_gaussian_1e2 = explain(
  model = model,
  x_explain = x_explain,
  x_train = x_train,
  approach = "gaussian",
  prediction_zero = prediction_zero,
  n_samples = 1e2
)

# ctree approach
explanation_ctree = explain(
  model = model,
  x_explain = x_explain,
  x_train = x_train,
  approach = "ctree",
  prediction_zero = prediction_zero,
  n_samples = 1e2
)

# Combined approach
explanation_combined = explain(
model = model,
 x_explain = x_explain,
 x_train = x_train,
 approach = c("gaussian", "ctree", "empirical", "empirical"),
 prediction_zero = prediction_zero,
 n_samples = 1e2
)

# Create a list of explanations without names
explanation_list_unnamed = list(
  explanation_independence,
  explanation_empirical,
  explanation_gaussian_1e1,
  explanation_gaussian_1e2,
  explanation_ctree,
  explanation_combined
)

# Create a list of explanations with names
explanation_list_named = list(
  "Ind." = explanation_independence,
  "Emp." = explanation_empirical,
  "Gaus. 1e1" = explanation_gaussian_1e1,
  "Gaus. 1e2" = explanation_gaussian_1e2,
  "Ctree" = explanation_ctree,
  "Combined approaches" = explanation_combined
)

if (requireNamespace("ggplot2", quietly = TRUE)) {

  # The function will set default names
  plots_unnamed = make_MSEv_evaluation_criterion_plots(explanation_list_unnamed)
  plots_unnamed$bar_plot_MSEv

  # The function use the provided names
  plots_named = make_MSEv_evaluation_criterion_plots(explanation_list_named)

  # See the types of plots produced
  names(plots_named)

  # Look at the plots
  plots_named

  # Can change many parameters to alter the plots.
  # Both design-wise, but also only plot certain coalitions and/or explicands
  plots_named_v2 = make_MSEv_evaluation_criterion_plots(
    explanation_list_named,
    index_combinations = c(1:3, 10, 15),
    index_explicands = c(1, 3:4, 6),
    ggplot_theme = ggplot2::theme_minimal(),
    brewer_palette = NULL,
    brewer_direction = -1,
    title_text_size = 0,
    bar_text_color = "black",
    bar_text_size = 3,
    bar_text_n_decimals = 0,
    point_size = 5,
    point_shape = "square",
    line_type = "dashed",
    line_width = 1,
    add_error_bars = FALSE,
    rotate_feature_names_45_degrees = TRUE,
    flip_coordinates = TRUE,
    legend_position = "bottom",
    legend_nrow = 2
  )

  # Look at some of the individual plots
  plots_named_v2$bar_plot_MSEv_for_each_coalition
  plots_named_v2$line_point_plot_MSEv_for_each_explicand
}

}
\author{
Lars Henry Berge Olsen
}
