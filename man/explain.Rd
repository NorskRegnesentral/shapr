% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/explanation.R
\name{explain}
\alias{explain}
\alias{explain.empirical}
\alias{explain.gaussian}
\alias{explain.copula}
\alias{explain.combined}
\title{Explain the output of machine learning models with more accurately estimated Shapley values}
\usage{
explain(x, explainer, approach, prediction_zero, ...)

\method{explain}{empirical}(x, explainer, approach, prediction_zero,
  type = "fixed_sigma", fixed_sigma_vec = 0.1, n_samples_aicc = 1000,
  eval_max_aicc = 20, start_aicc = 0.1, w_threshold = 0.95, ...)

\method{explain}{gaussian}(x, explainer, approach, prediction_zero,
  mu = NULL, cov_mat = NULL, ...)

\method{explain}{copula}(x, explainer, approach, prediction_zero, ...)

\method{explain}{combined}(x, explainer, approach, prediction_zero,
  mu = NULL, cov_mat = NULL, ...)
}
\arguments{
\item{x}{A matrix or data.frame. Contains the the features, whose
predictions ought to be explained (test data).}

\item{explainer}{An \code{explainer} object to use for explaining the observations.
See \code{\link{shapr}}.}

\item{approach}{Character vector of length \code{1} or \code{n_features}.
\code{n_features} equals the total number of features in the model. All elements should
either be \code{"gaussian"}, \code{"copula"} or \code{"empirical"}. See details for more information.}

\item{prediction_zero}{Numeric. The prediction value for unseen data, typically equal to the mean of
the response.}

\item{...}{Additional arguments passed to \code{\link{prepare_data}}}

\item{type}{Character. Should be equal to either \code{"independence"},
\code{"fixed_sigma"}, \code{"AICc_each_k"} or \code{"AICc_full"}.}

\item{fixed_sigma_vec}{Numeric. Represents the kernel bandwith. Note that this argument is only
applicable when \code{approach = "empirical"}, and \code{type = "fixed_sigma"}}

\item{n_samples_aicc}{Positive integer. Number of samples to consider in AICc optimization.
Note that this argument is only applicable when \code{approach = 'empirical'}, and \code{type}
is either equal to \code{"AICc_each_k"} or \code{"AICc_full"}}

\item{eval_max_aicc}{Positive integer. Maximum number of iterations when
optimizing the AICc. Note that this argument is only applicable when
\code{approach = "empirical"}, and \code{type} is either equal to
\code{"AICc_each_k"} or \code{"AICc_full"}}

\item{start_aicc}{Numeric. Start value when optimizing the AICc. Note that this argument
is only applicable when \code{approach = "empirical"}, and \code{type} is either equal to
\code{"AICc_each_k"} or \code{"AICc_full"}}

\item{w_threshold}{Positive integer between 0 and 1.}

\item{mu}{Numeric vector. (Optional) Containing the mean of the data generating distribution.
If \code{NULL} the expected values are estimated from the data. Note that this is only used
when \code{approach = "gaussian"}.}

\item{cov_mat}{Numeric matrix. (Optional) Containing the covariance matrix of the data
generating distribution. \code{NULL} means it is estimated from the data if needed
(in the Gaussian approach).}
}
\value{
Object of class \code{c("shapr", "list")}. Contains the following items:
\describe{
  \item{dt}{First item}
  \item{model}{Second item}
  \item{p}{Second item}
  \item{x_test}{Second item}
}
}
\description{
TODO: Add a more detailed description
}
\details{
TODO: Add information about approach.
TODO: Some additional details about the returned object
}
\examples{
# Load example data
data("Boston", package = "MASS")

# Split data into test- and training data
x_var <- c("lstat", "rm", "dis", "indus")
y_var <- "medv"
x_train <- head(Boston[, x_var], -3)
y_train <- head(Boston[, y_var, drop = FALSE], -3)
x_test <- tail(Boston[, x_var], 3)

# Fit a linear model
model <- lm(medv ~ lstat + rm + dis + indus, data = cbind(y_train, x_train))

# Create an explainer object
explainer <- shapr(x_train, model)

# Explain predictions
p <- mean(y_train[, 1])

# Empirical approach
x1 <- explain(x_test, explainer, approach = "empirical", prediction_zero = p)

# Gaussian approach
x2 <- explain(x_test, explainer, approach = "gaussian", prediction_zero = p)

# Gaussian copula approach
x3 <- explain(x_test, explainer, approach = "copula", prediction_zero = p)

# Combined approach
approach <- c("gaussian", "gaussian", "empirical", "empirical")
x4 <- explain(x_test, explainer, approach = approach, prediction_zero = p)

# Plot the results
\dontrun{
plot(x1)
}
}
\author{
Camilla Lingjaerde, Nikolai Sellereite
}
