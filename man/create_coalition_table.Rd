% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shapley_setup.R
\name{create_coalition_table}
\alias{create_coalition_table}
\title{Define coalitions, and fetch additional information about each unique coalition}
\usage{
create_coalition_table(
  m,
  exact = TRUE,
  n_coalitions = 200,
  weight_zero_m = 10^6,
  paired_shap_sampling = TRUE,
  prev_coal_samples = NULL,
  unique_sampling = TRUE,
  coal_feature_list = as.list(seq_len(m)),
  approach0 = "gaussian",
  shapley_reweighting = "none"
)
}
\arguments{
\item{m}{Positive integer. Total number of features/groups.}

\item{exact}{Logical. If \code{TRUE} all \code{2^m} coalitions are generated, otherwise a
subsample of the coalitions is used.}

\item{n_coalitions}{Positive integer. Note that if \code{exact = TRUE},
\code{n_coalitions} is ignored. However, if \code{m > 12} you'll need to add a positive integer
value for \code{n_coalitions}.}

\item{weight_zero_m}{Numeric. The value to use as a replacement for infinite coalition
weights when doing numerical operations.}

\item{paired_shap_sampling}{TODO: document}

\item{prev_coal_samples}{TODO: document}
}
\value{
A data.table that contains the following columns:
\describe{
\item{id_coalition}{Positive integer. Represents a unique key for each coalition. Note that the table
is sorted by \code{id_coalition}, so that is always equal to \code{x[["id_coalition"]] = 1:nrow(x)}.}
\item{coalitions}{List. Each item of the list is an integer vector where \code{coalitions[[i]]}
represents the indices of the elements included in coalition \code{i}. Note that all the items
are sorted such that \code{features[[i]] == sort(features[[i]])} is always true.}
\item{coalition_size}{Vector of positive integers. \code{coalition_size[i]} equals the number of elements in coalition
\code{i}, i.e. \code{coalition_size[i] = length(coalitions[[i]])}.}.
\item{N}{Positive integer. The number of unique ways to sample \code{coalition_size[i]} elements
from \code{m} different features/groups of features, without replacement.}
}
}
\description{
Define coalitions, and fetch additional information about each unique coalition
}
\examples{
# All coalitions
x <- create_coalition_table(m = 3)
nrow(x) # Equals 2^3 = 8

# Subsample of coalitions
x <- create_coalition_table(exact = FALSE, m = 10, n_coalitions = 1e2)
}
\author{
Nikolai Sellereite, Martin Jullum
}
