% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.R, R/model_ar.R, R/model_arima.R,
%   R/model_glm.R, R/model_lm.R, R/model_mgcv_gam.R, R/model_ranger.R,
%   R/model_xgboost.R
\name{predict_model}
\alias{predict_model}
\alias{predict_model.default}
\alias{predict_model.ar}
\alias{predict_model.Arima}
\alias{predict_model.forecast_ARIMA}
\alias{predict_model.glm}
\alias{predict_model.lm}
\alias{predict_model.gam}
\alias{predict_model.ranger}
\alias{predict_model.xgb.Booster}
\title{Generate predictions for input data with specified model}
\usage{
predict_model(x, newdata, ...)

\method{predict_model}{default}(x, newdata, ...)

\method{predict_model}{ar}(x, newdata, newreg, horizon, ...)

\method{predict_model}{Arima}(
  x,
  newdata,
  newreg,
  horizon,
  explain_idx,
  explain_lags,
  y,
  xreg,
  ...
)

\method{predict_model}{forecast_ARIMA}(x, newdata, newreg, horizon, ...)

\method{predict_model}{glm}(x, newdata, ...)

\method{predict_model}{lm}(x, newdata, ...)

\method{predict_model}{gam}(x, newdata, ...)

\method{predict_model}{ranger}(x, newdata, ...)

\method{predict_model}{xgb.Booster}(x, newdata, ...)
}
\arguments{
\item{x}{Model object for the model to be explained.}

\item{newdata}{A data.frame/data.table with the features to predict from.}

\item{...}{\code{newreg} and \code{horizon} parameters used in models passed to \verb{[explain_forecast()]}}
}
\value{
Numeric. Vector of size equal to the number of rows in \code{newdata}.
}
\description{
Performs prediction of response
\code{\link[stats:lm]{stats::lm()}},
\code{\link[stats:glm]{stats::glm()}},
\code{\link[ranger:ranger]{ranger::ranger()}},
\code{\link[mgcv:gam]{mgcv::gam()}} and
\code{\link[xgboost:xgb.train]{xgboost::xgb.train()}} with binary or continuous
response. See details for more information.

NOTE: You should never need to call this function explicitly.
It is exported just to be easier accessible for users, see details.
}
\details{
The following models are currently supported:
\itemize{
\item \code{\link[stats:lm]{stats::lm()}}
\item \code{\link[stats:glm]{stats::glm()}}
\item \code{\link[ranger:ranger]{ranger::ranger()}}
\item \code{\link[mgcv:gam]{mgcv::gam()}}
\item \code{\link[xgboost:xgb.train]{xgboost::xgb.train()}}
}

If you have a binary classification model we'll always return the probability prediction
for a single class.

If you are explaining a model not supported natively, you need to create the \verb{[predict_model()]} function yourself,
and pass it on to as an argument to \verb{[explain()]}.

For more details on how to explain such non-supported models (i.e. custom models), see the Advanced usage section
of the vignette: \cr
From R: \code{vignette("understanding_shapr", package = "shapr")}  \cr
Web: \url{https://norskregnesentral.github.io/shapr/articles/understanding_shapr.html#explain-custom-models}
}
\examples{
# Load example data
data("airquality")
airquality <- airquality[complete.cases(airquality), ]
# Split data into test- and training data
x_train <- head(airquality, -3)
x_explain <- tail(airquality, 3)
# Fit a linear model
model <- lm(Ozone ~ Solar.R + Wind + Temp + Month, data = x_train)

# Predicting for a model with a standardized format
predict_model(x = model, newdata = x_explain)
}
\author{
Martin Jullum
}
\keyword{internal}
