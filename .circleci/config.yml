version: 2
jobs:
  build:
    docker:
      - image: rocker/rstudio:3.5.1
    steps:
      - checkout
      - run:
          name: Set environmental variables
          command: |
            Rscript --vanilla \
              -e 'dsc <- read.dcf("DESCRIPTION")' \
              -e 'cat(sprintf("export PKG_TARBALL=%s_%s.tar.gz\n", dsc[,"Package"], dsc[,"Version"]))' \
              -e 'cat(sprintf("export RCHECK_DIR=%s.Rcheck\n", dsc[,"Package"]))' \
              >> ${BASH_ENV}
      - restore_cache:
          keys:
            - deps01-{{ .Branch }}-{{ checksum "DESCRIPTION" }}
            - deps01-{{ .Branch }}
            - deps01-
      - run:
          name: Install lib2git-dev
          command: apt-get update && apt-get install -y libgit2-dev
      - run:
          name: Install libxml2-dev
          command: apt-get update && apt-get install -y libxml2-dev
      - run:
          name: Install devtools
          command: R -e 'install.packages("devtools")'
      - run:
          name: Install dependencies
          command: R -e 'devtools::install_deps(dependencies = TRUE, upgrade = "always", repos = "https://cran.rstudio.com/")'
      - save_cache:
          key: deps01-{{ .Branch }}-{{ checksum "DESCRIPTION" }}
          paths:
            - "/usr/local/lib/R/site-library"
      - run:
          name: Build package
          command: R CMD build . --no-manual
      - run:
          name: Check package
          command: R CMD check "${PKG_TARBALL}" --no-examples --no-manual
      - run:
          name: Move files
          command: mv ${RCHECK_DIR} /tmp/Rcheck
          when: always
      - run:
          name: Lints
          when: on_success
          command: |
            export CI=""; R -e 'lints <- lintr::lint_package(); print(lints); if(length(lints) > 0) stop("Package contains lints")'
      - run:
          name: Code coverage
          when: on_success
          command: R -e 'covr::package_coverage()'
      - run:
          name: Install package
          when: on_success
          command: R CMD INSTALL "${PKG_TARBALL}"
      - run:
          name: Build website
          when: on_success
          command: R -e 'pkgdown::build_site(document = FALSE)'
      - run:
          name: Install from Github
          when: on_success
          command: R -e 'devtools::install_github("NorskRegnesentral/shapr")'
      - store_test_results:
          path: /tmp/Rcheck/tests/
          when: always
      - store_artifacts:
          path: /tmp/Rcheck
          when: always
      - persist_to_workspace:
          root: ./
          paths: docs
  docs-deploy:
    docker:
      - image: node:8.10.0
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Disable jekyll builds
          command: touch docs/.nojekyll
      - run:
          name: Install and configure dependencies
          command: |
            npm install -g --silent gh-pages@2.0.1
            git config user.email "ci-build@nr.no"
            git config user.name "ci-build"
      - add_ssh_keys:
          fingerprints:
            - "02:04:44:d0:a0:9f:52:11:c1:2b:2a:9b:70:42:af:d2"
      - run:
          name: Deploy docs to gh-pages branch
          command: gh-pages --dotfiles --message "[skip ci] Updates" --dist docs/
workflows:
  version: 2
  build:
    jobs:
      - build
      - docs-deploy:
          requires:
            - build
          filters:
            branches:
              only: master
