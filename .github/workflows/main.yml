on:
  push:
    branches:
      - master
  pull_request:

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.r-version }})

    strategy:
      fail-fast: false
      matrix:
        r-version: [3.5.1, 3.6.1]
        config:
        - { os: windows-latest, args: "--no-manual", type : "binary"}
        - { os: macOS-latest, type : "binary"}
        - { os: ubuntu-16.04, cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest", args: "--no-manual" , type : "source"}
        - { os: ubuntu-latest, cran: "https://demo.rstudiopm.com/all/__linux__/bionic/latest", args: "--no-manual", type : "source"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}

    steps:
      - uses: actions/checkout@v1

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.r-version }}

      - uses: r-lib/actions/setup-pandoc@master

      - uses: r-lib/actions/setup-tinytex@master
        if: contains(matrix.config.args, 'no-manual') == false

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ matrix.config.os }}-r-${{ matrix.r-version }}-${{ hashFiles('DESCRIPTION') }}

      - name: Install system dependencies
        if: matrix.config.os == 'ubuntu-16.04'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "install.packages('remotes')" -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Remove Makevars
        if: matrix.config.os == 'macOS-latest'
        run: rm src/Makevars

      - name: Reinstall stringi for ubuntu-latest
        if: runner.os == 'Linux'
        run: Rscript -e "install.packages('stringi', repos = 'http://cran.rstudio.com')"

      - name: Install dependencies
        run: Rscript -e "install.packages('remotes')" -e "remotes::install_deps(dependencies = TRUE, type = '${{ matrix.config.type }}')" -e "remotes::install_cran('rcmdcheck')"

      - name: Check
        run: Rscript -e "rcmdcheck::rcmdcheck(args = c('--no-manual', '--no-examples'), error_on = 'note', check_dir = 'check')"

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.r-version }}-results
          path: check
